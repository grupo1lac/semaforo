#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{indentfirst}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language portuguese
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing double
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
\size huge
Controlador de Semáforos
\series default
\size default

\begin_inset Newline newline
\end_inset

Relatório Técnico Final - Laboratório de Aquisição e Controlo
\end_layout

\begin_layout Author
Pedro Sousa (up201704307)
\begin_inset Newline newline
\end_inset

Leonardo Hügens (up201705764)
\end_layout

\begin_layout Section
Introdução
\end_layout

\begin_layout Standard
Neste relatório estará documentado o processo de criação de um controlador
 de semáforos.
 Para isso, utilizamos o LabView como ferramenta principal, também utilizando
 um pouco de Python na automatização.
\end_layout

\begin_layout Standard
Em primeiro lugar, começamos a discutir que situação iríamos estudar.
 Começamos por pensar na interceção da Rua Júlio Dínis com a praça de Mouzinho
 de Albuquerque pois apresenta uma interação interessante entre o semáforo
 dos peões e os semáforos de entrada e saída da rotunda.
 No entanto, decidimos estudar um cruzamento pois abria possibilidades para
 novas interações.
 O cruzamento em questão é o cruzamento entre a Rua Latino Coelho e a Rua
 Alegria.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Inserir figura com o esquema que estudamos (pode ser imagem satélite, esquema
 feito à mão, ou o próprio print do LabView).
 Qual achas que fica melhor?
\end_layout

\end_inset


\end_layout

\begin_layout Section
Especificações iniciais
\end_layout

\begin_layout Standard
(...)
\begin_inset Note Note
status open

\begin_layout Plain Layout
A incluir: Revisão de tecnologias possível; Seleção de hardware/software;
\end_layout

\begin_layout Plain Layout
Não sei mt bem oq devo escrever aqui xD
\end_layout

\end_inset


\end_layout

\begin_layout Section
Planeamento
\end_layout

\begin_layout Standard
Para este projeto, implementamos um processo de evolução natural de trabalho.
 Isto é, começamos com um programa simples (
\begin_inset Formula $\alpha$
\end_inset

_0.1) e fomos inserindo novas características e funcionalidades.
 Apresentamos agora um breve resumo das várias fases do programa.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha$
\end_inset

_0.1: Sistema com semáforo principal e semáforo para peões perfeitamente
 sincroonizados.
 Apresenta um botão de emergência que, caso esteja ativo, o semáforo para
 peões é desativado e o semáforo principal fica em amarelo intermitente.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha$
\end_inset

_0.2: Reforma à primeira versão do programa.
 Apresenta as mesmas características do 
\begin_inset Formula $\alpha$
\end_inset

_0.1, porém, de forma mais compacta, assim, quando fossemos estudar sistemas
 mais complexos teríamos uma maneira simples de fazer semáforos usando uma
 subVI de 
\begin_inset Formula $\alpha$
\end_inset

_0.2.
\begin_inset Note Note
status open

\begin_layout Plain Layout
achas que fica bem eu na descrição do 0.3 referir logo que não continuamos
 com a ideia do 0.2 sem referir pq? Eu estava a pensar explicar melhor o
 pq da 0.2 ter falhado mas assim iamos ficar sem nada para dizer na parte
 4 - Desenvolvimento.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha$
\end_inset

_0.3: Com o insucesso de 
\begin_inset Formula $\alpha$
\end_inset

_0.2, fazemos a nossa segunda reforma.
 Processo utiliza uma ideia semelhante à versão 0.2 mas agora fizemos um
 semáforo à volta de ''case structures''.
 Apresenta dois semáforos principais, conectados como se fossem dois semáforos
 de um cruzamento, e os respetivos semáforos para peões.
 Apresenta também um mecanismo de acionameto antecipado por controlo de
 velocidade dos veículos e um mecanismo que, caso haja bastante tráfego
 na via, o semáforo utiliza essa informação de forma a haver uma desiguldade
 ''positiva''
\begin_inset Foot
status open

\begin_layout Plain Layout
Com desigualdade ''positiva'' queremos dizer que o semáforo vai estar mais
 tempo no verde
\begin_inset Formula $+$
\end_inset

amarelo do que no vermelho
\end_layout

\end_inset

 entre o tempo em que está em vermelho e o tempo em que está no verde 
\begin_inset Formula $+$
\end_inset

 amarelo, e assim diminuir naturalmente o tráfego.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha$
\end_inset

_0.4: Apenas uma remodelação do 
\begin_inset Formula $\alpha$
\end_inset

_0.3.
 Agora apresenta uma representação visual do cruzamento que estamos a estudar
 de forma a tornar mais direta a sua leitura.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Hugens, acho que era porreiro fazeres tu o resumo do 0.5 e 0.6 sendo que é
 tudo teu e sabes muito melhor oq dizer doq eu :)
\end_layout

\begin_layout Plain Layout
PS: Se quiseres alterar alguma coisa à descrição da 0.2 também és bem-vindo,
 como não fui eu q fiz tentei ser breve
\end_layout

\end_inset


\end_layout

\begin_layout Section
Desenvolvimento
\end_layout

\begin_layout Standard
Nesta parte do relatório iremos explicar em detalhe as fases já apresentadas
 do nosso projeto.
\end_layout

\begin_layout Subsection*
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

-0.1
\end_layout

\begin_layout Standard
Em primeiro lugar, criamos o semáforo principal, para isso utilizamos booleanos
 do tipo botão, alterando a cor para o respetivo elemento do semáforo e
 fizemos uma flat sequence onde por cada frame apenas uma luz estava ligada.
 Depois criamos mais dois botões referentes ao semáforo para peões e alteramos
 a sua condição consoante o estado em que o semáforo principal estava (se
 o semáforo estava vermelho o semáforo para peões ficava verde, (se o semáforo
 estava verde o semáforo para peões ficava vermelho).
 Por fim criamos uma case structure que, caso o botão de emergência estivesse
 ativo corria um ciclo while em que a luz amarela ligava e desligava e caso
 estivesse desligado corria o nosso programa anteriormente escrito.
 Por fim, introduzimos um timer que apresenta ao peão quanto tempo falta
 para o seu semáforo ficar vermelho.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename a01block.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Formula $\alpha$
\end_inset

_0.1
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

-0.2
\end_layout

\begin_layout Standard
Refiro aqui a imagem 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:jantar"
plural "false"
caps "false"
noprefix "false"

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Insert -> Cross-Reference
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Insert -> Float -> Figure
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename saudades.jpg
	lyxscale 10
	width 5cm

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Breve descrição.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:jantar"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Insert -> Label
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

-0.3
\end_layout

\begin_layout Standard
A ideia inicial era a implementação de um ''state'' que está associado ao
 semáforo, isto é:
\end_layout

\begin_layout Itemize
Se o semáforo está no estado 0, ele está vermelho e passa para o estado
 1 quando se tiver passado no mínimo
\begin_inset Foot
status open

\begin_layout Plain Layout
este ''no mínimo'' é interessante e será discutido mais à frente
\end_layout

\end_inset

 um tempo 
\begin_inset Formula $t=timer$
\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
timer é um input do nosso sistema de forma a definir o tempo que o semáforo
 fica no verde
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Se o semáforo esá no estado 1 ele começa verde e, passado um tempo 
\begin_inset Formula $t=timer$
\end_inset

, muda para amarelo, onde permanece um tempo 
\begin_inset Formula $t=\frac{timer}{2}$
\end_inset

, por fim, muda para o estado 0.
\end_layout

\begin_layout Standard
Aplicando isto a um semáforo simples o que acontece é exatamente o esperado,
 e apenas tivemos de usar um case structure para definir os estados e uma
 flat sequence para fazer o semáforo ficar verde e depois amarelo.
\end_layout

\begin_layout Standard
Agora, decidimos emparelhar outro semáforo.
 Para isso, estudamos um cruzamento simples entre duas vias de sentido único.
 Neste exemplo, tudo está em sincronia:
\end_layout

\begin_layout Itemize
Quando um semáforo está a permitir passagem (estado 1), o outro não permite
 (estado 0).
\end_layout

\begin_layout Itemize
Quando um semáforo está a permitir passagem (estado 1), o seu semáforo de
 peões associado não permite.
\end_layout

\begin_layout Standard
Para implementar esta ideia fizemos com que os estados dos semáforos estivessem
 conectados.
 Isto é, o semáforo 1 está num estado X, então o semáforo 2 está no outro
 estado.
\end_layout

\begin_layout Standard
Mas, com esta teoria deparamo-nos com um problema conceptual.
 Um semáforo fica no estado 0 um tempo 
\begin_inset Formula $t=timer$
\end_inset

 e fica no estado 1 um tempo 
\begin_inset Formula $t=1.5timer$
\end_inset

 (
\begin_inset Formula $1.0$
\end_inset

 no verde e 
\begin_inset Formula $0.5$
\end_inset

 no amarelo).
 Se os semáforos estão perfeitamente conectados quanto tempo irá o semáforo
 estar no vermelho? A resposta é 
\begin_inset Formula $1.5timer$
\end_inset

 o que é o esperado, porque o estado só muda quando tudo o que tiver de
 acontecer naquela iteração do 
\emph on
for 
\emph default
(que é o nosso 
\emph on
for
\emph default
 temporal) terminar, ou seja, 
\begin_inset Formula $1.5timer$
\end_inset

 depois.
\end_layout

\begin_layout Standard
Para finalizar, adicionamos duas novas ferramentas:
\end_layout

\begin_layout Itemize
Um mecanismo que, caso haja um carro a mais de 
\begin_inset Formula $50Km/h$
\end_inset

, o amarelo é acionado antecipadamente.
 No entanto, o semáforo fica no verde no mínimo um tempo 
\begin_inset Formula $t=\frac{timer}{2}$
\end_inset

.
 Este tempo foi introduzido para quando o semáforo fica verde não mudar
 imediatamente para amarelo, havendo sempre um delay justificado.
\end_layout

\begin_layout Itemize
Um mecanismo que, caso haja um enorme tráfego de carros, o semáforo permaneça
 menos tempo no vermelho de forma a haver um melhor fluído de tráfego.
\end_layout

\begin_layout Standard
Estes dois mecanismos estão ligados pois, no fundo, acionar um aviso de
 congestionamento na via 1 é o equivalente a ligar o mecanismo de velocidade
 na via 2, pois, se na via 2 está menos tempo no verde, por consequência,
 na via 1 está menos tempo no vermelho.
\end_layout

\begin_layout Standard
Adicionamos uns sliders para representarem o tráfego nas vias e fizemos
 com que o seu valor diminuísse quando está verde e amarelo e aumentasse
 quando está vermelho.
 Adicionamos também um input ''rácio de entrada'' que, se saem Y carros
 enquanto está verde, entram ''rácio de entrada'' 
\begin_inset Formula $\times$
\end_inset

Y carros enquanto está vermelho.
 Assim, podemos associar este valor, por exemplo, à altura do dia.
 Se, na hora de ponta entram 
\begin_inset Formula $5\times$
\end_inset

 mais carros do que saem, à noite entram 
\begin_inset Formula $\frac{1}{10}\times$
\end_inset

 dos carros que saem até que não há trânsito de todo.
\end_layout

\begin_layout Subsection*
\begin_inset Formula $\boldsymbol{\alpha}$
\end_inset

-0.4
\end_layout

\begin_layout Standard
Nesta implementação decidimos estudar o caso escolhido, ou seja, o cruzamento
 da rua Latino Coelho e da rua da Alegria.
 Para isso, remodelamos o 
\begin_inset Formula $\alpha$
\end_inset

_0.3 de forma a queria uma melhor visualização do cruzamento no Front Panel
 do LabView.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename a04front.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Front Panel do 
\begin_inset Formula $\alpha$
\end_inset

_0.4 com o esquema do cruzamento entre a rua Latino Coelho e a rua da Alegria;
 o botão retangular está ativo quando a velocidade na via é 
\begin_inset Formula $\geq50km/h$
\end_inset

; o botão quadrado está ativo quando há congestionamento na via (Valor no
 Slider 
\begin_inset Formula $\geq8$
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Acho que a parte do desenvolvimento dos alphas em que trabalhei estão +/-
 eheh
\end_layout

\begin_layout Plain Layout
Fica à vontade para alterar qualqueeer coisa que te apeteça, confio totalmente
 no teu sentido crítico e tenho a certeza que consegues melhorar algo que
 eu tenha feito menos bem.
\end_layout

\begin_layout Plain Layout
Em relação aos alphas em falta acho que sinceramente deixo contigo.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Avaliação de desempenho
\end_layout

\begin_layout Standard
(...)
\end_layout

\begin_layout Section
Implementação real - refleções
\end_layout

\begin_layout Standard
(...)
\begin_inset Note Note
status open

\begin_layout Plain Layout
A incluir: Como implementar em semáforos reais (ideia: usar um arduino ou
 raspberry pi em cada semáforo, etc...); Estimativa de custo de implementação
 em sistemas de semáforos reais.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusão
\end_layout

\begin_layout Standard
(...)
\end_layout

\begin_layout Subsection*
Recursos
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Metemos tudo no github e metemos aqui o link op :)
\end_layout

\end_inset


\end_layout

\end_body
\end_document
